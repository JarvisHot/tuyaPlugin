def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.sx.cat"
        // You can update the following values to match your application needs. 
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
        packagingOptions {
            pickFirst 'lib/*/libc++_shared.so' // 多个 AAR（Android Library）文件中存在此 .so 文件，请选择第一个
        }
    }

    signingConfigs {
        debug {
            storeFile file('/Users/mac/Desktop/jkk.jks')
            storePassword '123456'
            keyAlias 'jyk'
            keyPassword '123456'
        }
        release {
            storeFile file('/Users/mac/Desktop/jkk.jks')
            storePassword '123456'
            keyAlias 'jyk'
            keyPassword '123456'
        }
    }
    buildTypes {
        release {
            minifyEnabled true      // 开启混淆
            zipAlignEnabled true    // 已启用压缩
            shrinkResources true    // 缩减资源
            consumerProguardFiles "proguard-rules.pro"
//            applicationVariants.all { variant ->
//                variant.outputs.all { output ->
//                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
//                        //输出文件名
//                        outputFileName = "tk_${variant.buildType.name}_${variant.versionName}_${variant.versionCode}.apk"
//                    }
//                }
//            }
        }
    }
}


flutter {
    source '../..'
}
